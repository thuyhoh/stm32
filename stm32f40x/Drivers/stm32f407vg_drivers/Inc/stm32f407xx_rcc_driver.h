/*
 *  stm32f407xx_rcc_driver.h
 *
 *  Created on: Aug 20, 2024
 *  Author: ASUS
 */

#ifndef __STM32F407XX_RCC_DRIVER_H_
#define __STM32F407XX_RCC_DRIVER_H_

#include "stdint.h"
#include "stm32f407xx.h"

typedef struct 
{
	uint32_t RCC_ClockSource;
}RCC_Config_t;



/*
 * BIT POSITION
*/

// RCC_CR
#define RCC_CR_HSION									0
#define RCC_CR_HSIRDY									1
#define RCC_CR_HSITRIM /*[7:4]*/			3
#define RCC_CR_HSICAL /*[15:8]*/			8
#define RCC_CR_HSEON									16			
#define RCC_CR_HSERDY									17
#define RCC_CR_HSEBYP									18
#define RCC_CR_CSSON									19
#define RCC_CR_PLLON									24
#define RCC_CR_PLLRDY									25
#define RCC_CR_PLLI2SON								26
#define RCC_CR_PLLI2SRDY							27

// RCC_PLLCFGR
#define RCC_PLLCFGR_PLLM /*[5:0]*/		0
#define RCC_PLLCFGR_PLLN /*[14:6]*/		6
#define RCC_PLLCFGR_PLLP /*[17:16]*/  16
#define RCC_PLLCFGR_PLLSRC						22
#define RCC_PLLCFGR_PLLQ	/*[27:24]*/ 24

// RCC_CFGR
#define RCC_CFGR_SW /*[3:0]*/					0
#define RCC_CFGR_HPRE /*[7:4]*/				4
#define RCC_CFGR_PPRE1 /*[12:10]*/		10
#define RCC_CFGR_PPRE2 /*[15:13]*/		13
#define RCC_CFGR_RTCPRE /*[20:16]*/		16
#define RCC_CFGR_MCO1 /*[22:21]*/			21
#define RCC_CFGR_I2SSCR								23
#define RCC_CFGR_MCO1PRE /*[26:24]*/	24
#define RCC_CFGR_MCO2PRE /*[29:27]*/	27
#define RCC_CFGR_MCO2 /*[31:30]*/			31

// RCC_CIR
#define RCC_CIR_LSIRDYF								0
#define RCC_CIR_LSERDYF								1
#define RCC_CIR_HSIRDYF								2
#define RCC_CIR_HSERDYF								3
#define RCC_CIR_PLLRDYF								4
#define RCC_CIR_PLLI2SRDYF						5
#define RCC_CIR_CSSF									7
#define RCC_CIR_LSIRDYIE							8
#define RCC_CIR_LSERDYIE							9
#define RCC_CIR_HSIRDYIE							10
#define RCC_CIR_HSERDYIE							11
#define RCC_CIR_PLLRDYIE							12
#define RCC_CIR_PLLI2SRDYIE						13
#define RCC_CIR_LSIRDYC								16
#define RCC_CIR_LSERDYC								17
#define RCC_CIR_HSIRDYC								18
#define RCC_CIR_HSERDYC								19
#define RCC_CIR_PLLRDYC								20
#define RCC_CIR_PLLI2SRDYC						21
#define RCC_CIR_CSSC									23

// RCC_AHB1RSTR
#define RCC_AHB1RSTR_GPIOARST				0
#define RCC_AHB1RSTR_GPIOBRST				1
#define RCC_AHB1RSTR_GPIOCRST				2
#define RCC_AHB1RSTR_GPIODRST				3
#define RCC_AHB1RSTR_GPIOERST				4
#define RCC_AHB1RSTR_GPIOFRST				5
#define RCC_AHB1RSTR_GPIOGRST				6
#define RCC_AHB1RSTR_GPIOHRST				7
#define RCC_AHB1RSTR_GPIOIRST				8
#define RCC_AHB1RSTR_CRCRST					12
#define RCC_AHB1RSTR_DMA1RST				21
#define RCC_AHB1RSTR_DMA2RST				22
#define RCC_AHB1RSTR_ETHMACRST			25
#define RCC_AHB1RSTR_OTGHSRST				29

// RCC_AHB2RSTR
#define RCC_AHB2RSTR_DCMIRST				0
#define RCC_AHB2RSTR_CRYPRST				4
#define RCC_AHB2RSTR_HASHRST				5
#define RCC_AHB2RSTR_RNGRST					6
#define RCC_AHB2RSTR_OTGFSRST				7

// RCC_AHB3RSTR
#define RCC_AHB3RSTR_FSMCRST				0


// RCC_APB1RSTR
#define RCC_APB1RSTR_TIM2RST				0
#define RCC_APB1RSTR_TIM3RST				1
#define RCC_APB1RSTR_TIM4RST				2
#define RCC_APB1RSTR_TIM5RST				3
#define RCC_APB1RSTR_TIM6RST				4
#define RCC_APB1RSTR_TIM7RST				5
#define RCC_APB1RSTR_TIM12RST				6
#define RCC_APB1RSTR_TIM13RST				7
#define RCC_APB1RSTR_TIM14RST				8
#define RCC_APB1RSTR_WWDGRST				11
#define RCC_APB1RSTR_SPI2RST				14
#define RCC_APB1RSTR_SPI3RST				15
#define RCC_APB1RSTR_USART2RST			17
#define RCC_APB1RSTR_USART3RST			18
#define RCC_APB1RSTR_UART4RST				19
#define RCC_APB1RSTR_UART5RST				20
#define RCC_APB1RSTR_I2C1RST				21
#define RCC_APB1RSTR_I2C2RST				22
#define RCC_APB1RSTR_I2C3RST				23
#define RCC_APB1RSTR_CAN1RST				25
#define RCC_APB1RSTR_CAN2RST				26
#define RCC_APB1RSTR_PWRRST					28
#define RCC_APB1RSTR_DACRST					29

// RCC_APB2RSTR
#define RCC_APB2RSTR_TIM1RST				0
#define RCC_APB2RSTR_TIM8RST				1
#define RCC_APB2RSTR_USART1RST			4
#define RCC_APB2RSTR_USART6RST			5
#define RCC_APB2RSTR_ADCRST					8
#define RCC_APB2RSTR_SDIORST				11
#define RCC_APB2RSTR_SPI1RST				12
#define RCC_APB2RSTR_SYSCFGRST			14
#define RCC_APB2RSTR_TIM9RST				16
#define RCC_APB2RSTR_TIM10RST				17
#define RCC_APB2RSTR_TIM11RST				18

// RCC_AHB1ENR
#define RCC_AHB1ENR_GPIOAEN				0
#define RCC_AHB1ENR_GPIOBEN				1
#define RCC_AHB1ENR_GPIOCEN				2
#define RCC_AHB1ENR_GPIODEN				3
#define RCC_AHB1ENR_GPIOEEN				4
#define RCC_AHB1ENR_GPIOFEN				5
#define RCC_AHB1ENR_GPIOGEN				6
#define RCC_AHB1ENR_GPIOHEN				7
#define RCC_AHB1ENR_GPIOIEN				8
#define RCC_AHB1ENR_CRCEN					12
#define RCC_AHB1ENR_BKPSRAMEN			18
#define RCC_AHB1ENR_CCMDATARAMEN	20
#define RCC_AHB1ENR_DMA1EN				21
#define RCC_AHB1ENR_DMA2EN				22
#define RCC_AHB1ENR_ETHMACEN			25
#define RCC_AHB1ENR_ETHMACTXEN		26
#define RCC_AHB1ENR_ETHMACRXEN		27
#define RCC_AHB1ENR_ETHMACPTPEN		28
#define RCC_AHB1ENR_29OTGHSEN			29
#define RCC_AHB1ENR_OTGHSEN				31

// RCC_AHB2ENR
#define RCC_AHB2ENR_DCMIEN				0
#define RCC_AHB2ENR_CRYPEN				4
#define RCC_AHB2ENR_HASHEN				5
#define RCC_AHB2ENR_RNGEN					6
#define RCC_AHB2ENR_OTGFSEN				7

// RCC_AHB3ENR
#define RCC_AHB3ENR_FSMCEN				0

// RCC_APB1ENR
#define RCC_APB1ENR_TIM2EN				0
#define RCC_APB1ENR_TIM3EN				1
#define RCC_APB1ENR_TIM4EN				2
#define RCC_APB1ENR_TIM5EN				3
#define RCC_APB1ENR_TIM6EN				4
#define RCC_APB1ENR_TIM7EN				5
#define RCC_APB1ENR_TIM12EN				6
#define RCC_APB1ENR_TIM13EN				7
#define RCC_APB1ENR_TIM14EN				8
#define RCC_APB1ENR_WWDGEN				11
#define RCC_APB1ENR_SPI2EN				14
#define RCC_APB1ENR_SPI3EN				15
#define RCC_APB1ENR_USART2EN			17
#define RCC_APB1ENR_USART3EN			18
#define RCC_APB1ENR_UART4EN				19
#define RCC_APB1ENR_UART5EN				20
#define RCC_APB1ENR_I2C1EN				21
#define RCC_APB1ENR_I2C2EN				22
#define RCC_APB1ENR_I2C3EN				23
#define RCC_APB1ENR_CAN1EN				25
#define RCC_APB1ENR_CAN2EN				26
#define RCC_APB1ENR_PWREN					28
#define RCC_APB1ENR_DACEN					29

// RCC_APB2ENR
#define RCC_APB2ENR_TIM1EN				0
#define RCC_APB2ENR_TIM8EN				1
#define RCC_APB2ENR_USART1EN			4
#define RCC_APB2ENR_USART6EN			5
#define RCC_APB2ENR_ADCEN					8
#define RCC_APB2ENR_SDIOEN				11
#define RCC_APB2ENR_SPI1EN				12
#define RCC_APB2ENR_SYSCFGEN			14
#define RCC_APB2ENR_TIM9EN				16
#define RCC_APB2ENR_TIM10EN				17
#define RCC_APB2ENR_TIM11EN				18

// RCC_AHB1LPENR
#define RCC_AHB1LPENR_GPIOALPEN		0
#define RCC_AHB1LPENR_GPIOBLPEN		1
#define RCC_AHB1LPENR_GPIOCLPEN		2
#define RCC_AHB1LPENR_GPIODLPEN		3
#define RCC_AHB1LPENR_GPIOELPEN		4
#define RCC_AHB1LPENR_GPIOFLPEN		5
#define RCC_AHB1LPENR_GPIOGLPEN		6
#define RCC_AHB1LPENR_GPIOHLPEN		7	
#define RCC_AHB1LPENR_GPIOILPEN		8
#define RCC_AHB1LPENR_CRCLPEN			12
#define RCC_AHB1LPENR_FLITFLPEN		15
#define RCC_AHB1LPENR_SRAM1LPEN		16
#define RCC_AHB1LPENR_SRAM2LPEN		17
#define RCC_AHB1LPENR_BKPSRAMLPEN	18
#define RCC_AHB1LPENR_DMA1LPEN		21
#define RCC_AHB1LPENR_DMA2LPEN		22
#define RCC_AHB1LPENR_ETHMACLPEN	25
#define RCC_AHB1LPENR_ETHMACTXLPEN	26
#define RCC_AHB1LPENR_ETHMACRXLPEN	27
#define RCC_AHB1LPENR_ETHMACPTPLPEN	28
#define RCC_AHB1LPENR_OTGHSLPEN			29
#define RCC_AHB1LPENR_OTGHSULPILPEN	30

// RCC_AHB2LPENR
#define RCC_AHB2LPENR_DCMILPEN		0
#define RCC_AHB2LPENR_CRYPLPEN		4
#define RCC_AHB2LPENR_HASHLPEN		5
#define RCC_AHB2LPENR_RNGLPEN			6
#define RCC_AHB2LPENR_OTGFSLPEN		7

// RCC_AHB3LPENR
#define RCC_AHB3LPENR_FSMCLPEN		0

// RCC_APB1LPENR
#define RCC_APB1LPENR_TIM2LPEN				0
#define RCC_APB1LPENR_TIM3LPEN				1
#define RCC_APB1LPENR_TIM4LPEN				2
#define RCC_APB1LPENR_TIM5LPEN				3
#define RCC_APB1LPENR_TIM6LPEN				4
#define RCC_APB1LPENR_TIM7LPEN				5
#define RCC_APB1LPENR_TIM12LPEN				6
#define RCC_APB1LPENR_TIM13LPEN				7
#define RCC_APB1LPENR_TIM14LPEN				8
#define RCC_APB1LPENR_WWDGLPEN				11
#define RCC_APB1LPENR_SPI2LPEN				14
#define RCC_APB1LPENR_SPI3LPEN				15
#define RCC_APB1LPENR_USART2LPEN			17
#define RCC_APB1LPENR_USART3LPEN			18
#define RCC_APB1LPENR_UART4LPEN				19
#define RCC_APB1LPENR_UART5LPEN				20
#define RCC_APB1LPENR_I2C1LPEN				21
#define RCC_APB1LPENR_I2C2LPEN				22
#define RCC_APB1LPENR_I2C3LPEN				23
#define RCC_APB1LPENR_CAN1LPEN				25
#define RCC_APB1LPENR_CAN2LPEN				26
#define RCC_APB1LPENR_PWRLPEN					28
#define RCC_APB1LPENR_DACLPEN					29

// RCC_APB2LPENR
#define RCC_APB2LPENR_TIM1LPEN				0
#define RCC_APB2LPENR_TIM8LPEN				1
#define RCC_APB2LPENR_USART1LPEN			4
#define RCC_APB2LPENR_USART6LPEN			5
#define RCC_APB2LPENR_ADCLPEN					8
#define RCC_APB2LPENR_SDIOLPEN				11
#define RCC_APB2LPENR_SPI1LPEN				12
#define RCC_APB2LPENR_SYSCFGLPEN			14
#define RCC_APB2LPENR_TIM9LPEN				16
#define RCC_APB2LPENR_TIM10LPEN				17
#define RCC_APB2LPENR_TIM11LPEN				18

// RCC_BDCR
#define RCC_BDCR_LSEON								0
#define RCC_BDCR_LSERDY								1
#define RCC_BDCR_LSEBYP								2
#define RCC_BDCR_RTCSEL								8
#define RCC_BDCR_RTCEN								15
#define RCC_BDCR_BDRST								16

// RCC_CSR
#define RCC_CSR_LSION									0
#define RCC_CSR_LSIRDY								1
#define RCC_CSR_RMVF									24
#define RCC_CSR_BORRSTF								25
#define RCC_CSR_PINRSTF								26
#define RCC_CSR_PORRSTF								27
#define RCC_CSR_SFTRSTF								28
#define RCC_CSR_IWDGRSTF							29
#define RCC_CSR_WWDGRSTF							30
#define RCC_CSR_LPWRRSTF							31

// RCC_SSCGR
#define RCC_SSCGR_MODPER /*[12:0]*/			0
#define RCC_SSCGR_INCSTEP /*[27:13]*/		13
#define RCC_SSCGR_SPREADSEL 						30
#define RCC_SSCGR_SSCGEN								31

// RCC_PLLI2SCFGR
#define RCC_PLLI2SCFGR_PLLI2SN /*[14:6]*/					6
#define RCC_PLLI2SCFGR_PLLI2SR /*[30:28]*/				28
//
#define SYS_HSI_OSC								0
#define SYS_HSE_OSC								1
#define SYS_PLL_OSC								2

#define HSI_CLOCK_SOURCE					16000000U
#define HSE_CLOCK_SOURCE					8000000U
#define PLL_CLOCK_SOURCE					2100000U


/*
 * Clock and Reset Control of GPIO
 */

/* Enable Clock for GPIOx */
#define GPIOA_PCLK_EN() 			RCC_BASE->AHB1ENR |= (1 << RCC_AHB1ENR_GPIOAEN)
#define GPIOB_PCLK_EN() 			RCC_BASE->AHB1ENR |= (1 << RCC_AHB1ENR_GPIOBEN)
#define GPIOC_PCLK_EN() 			RCC_BASE->AHB1ENR |= (1 << RCC_AHB1ENR_GPIOCEN)
#define GPIOD_PCLK_EN() 			RCC_BASE->AHB1ENR |= (1 << RCC_AHB1ENR_GPIODEN)
#define GPIOE_PCLK_EN() 			RCC_BASE->AHB1ENR |= (1 << RCC_AHB1ENR_GPIOEEN)
#define GPIOF_PCLK_EN() 			RCC_BASE->AHB1ENR |= (1 << RCC_AHB1ENR_GPIOFEN)
#define GPIOG_PCLK_EN() 			RCC_BASE->AHB1ENR |= (1 << RCC_AHB1ENR_GPIOGEN)
#define GPIOH_PCLK_EN() 			RCC_BASE->AHB1ENR |= (1 << RCC_AHB1ENR_GPIOHEN)
#define GPIOI_PCLK_EN() 			RCC_BASE->AHB1ENR |= (1 << RCC_AHB1ENR_GPIOIEN)

/* Enable Clock for SYSCFG*/
#define SYSCFG_PCLK_EN()			RCC_BASE->APB1ENR |= (1 << RCC_APB1ENR_SYSCFGEN)

/* Disable Clock for GPIOx */
#define GPIOA_PCLK_DIS() 			RCC_BASE->AHB1ENR &= (uint32_t)~(1 << RCC_AHB1ENR_GPIOAEN)
#define GPIOB_PCLK_DIS() 			RCC_BASE->AHB1ENR &= (uint32_t)~(1 << RCC_AHB1ENR_GPIOBEN)
#define GPIOC_PCLK_DIS() 			RCC_BASE->AHB1ENR &= (uint32_t)~(1 << RCC_AHB1ENR_GPIOCEN)
#define GPIOD_PCLK_DIS() 			RCC_BASE->AHB1ENR &= (uint32_t)~(1 << RCC_AHB1ENR_GPIODEN)
#define GPIOE_PCLK_DIS() 			RCC_BASE->AHB1ENR &= (uint32_t)~(1 << RCC_AHB1ENR_GPIOEEN)
#define GPIOF_PCLK_DIS() 			RCC_BASE->AHB1ENR &= (uint32_t)~(1 << RCC_AHB1ENR_GPIOFEN)
#define GPIOG_PCLK_DIS() 			RCC_BASE->AHB1ENR &= (uint32_t)~(1 << RCC_AHB1ENR_GPIOGEN)
#define GPIOH_PCLK_DIS() 			RCC_BASE->AHB1ENR &= (uint32_t)~(1 << RCC_AHB1ENR_GPIOHEN)
#define GPIOI_PCLK_DIS() 			RCC_BASE->AHB1ENR &= (uint32_t)~(1 << RCC_AHB1ENR_GPIOIEN)

/* Disable Clock for SYSCFG*/
#define SYSCFG_PCLK_DIS()			RCC_BASE->APB1ENR &= (uint32_t)~(1 << RCC_APB1ENR_SYSCFGEN)

/*
 * Macro to reset GPIOx peripheral
 */
#define GPIOA_REG_RESET()			do{RCC_BASE->AHB1RSTR |= (1<<RCC_AHB1RSTR_GPIOARST); RCC_BASE->AHB1RSTR &= (uint32_t)~(1<<RCC_AHB1RSTR_GPIOARST);}while(0)
#define GPIOB_REG_RESET()			do{RCC_BASE->AHB1RSTR |= (1<<RCC_AHB1RSTR_GPIOBRST); RCC_BASE->AHB1RSTR &= (uint32_t)~(1<<RCC_AHB1RSTR_GPIOBRST);}while(0)
#define GPIOC_REG_RESET()			do{RCC_BASE->AHB1RSTR |= (1<<RCC_AHB1RSTR_GPIOCRST); RCC_BASE->AHB1RSTR &= (uint32_t)~(1<<RCC_AHB1RSTR_GPIOCRST);}while(0)
#define GPIOD_REG_RESET()			do{RCC_BASE->AHB1RSTR |= (1<<RCC_AHB1RSTR_GPIODRST); RCC_BASE->AHB1RSTR &= (uint32_t)~(1<<RCC_AHB1RSTR_GPIODRST);}while(0)
#define GPIOE_REG_RESET()			do{RCC_BASE->AHB1RSTR |= (1<<RCC_AHB1RSTR_GPIOERST); RCC_BASE->AHB1RSTR &= (uint32_t)~(1<<RCC_AHB1RSTR_GPIOERST);}while(0)
#define GPIOF_REG_RESET()			do{RCC_BASE->AHB1RSTR |= (1<<RCC_AHB1RSTR_GPIOFRST); RCC_BASE->AHB1RSTR &= (uint32_t)~(1<<RCC_AHB1RSTR_GPIOFRST);}while(0)
#define GPIOG_REG_RESET()			do{RCC_BASE->AHB1RSTR |= (1<<RCC_AHB1RSTR_GPIOGRST); RCC_BASE->AHB1RSTR &= (uint32_t)~(1<<RCC_AHB1RSTR_GPIOGRST);}while(0)
#define GPIOH_REG_RESET()			do{RCC_BASE->AHB1RSTR |= (1<<RCC_AHB1RSTR_GPIOHRST); RCC_BASE->AHB1RSTR &= (uint32_t)~(1<<RCC_AHB1RSTR_GPIOHRST);}while(0)
#define GPIOI_REG_RESET()			do{RCC_BASE->AHB1RSTR |= (1<<RCC_AHB1RSTR_GPIOIRST); RCC_BASE->AHB1RSTR &= (uint32_t)~(1<<RCC_AHB1RSTR_GPIOIRST);}while(0)

/* Disable Clock for SYSCFG*/
#define SYSCFG_REG_RESET()		do{RCC_BASE->APB2RSTR |= (1<<RCC_APB2RSTR_SYSCFG); RCC_BASE->APB2RSTR &= (uint32_t)~(1<<RCC_APB2RSTR_SYSCFG);}while(0)

/*
 * Clock and Reset Control of SPI
 */

#define SPI1_PCLK_EN()					RCC_BASE->APB1ENR |= (1 << RCC_APB2ENR_SPI1EN)
#define SPI2_PCLK_EN()					RCC_BASE->APB1ENR |= (1 << RCC_APB1ENR_SPI2EN)
#define SPI3_PCLK_EN()					RCC_BASE->APB1ENR |= (1 << RCC_APB1ENR_SPI3EN)
//#define SPI4_PCLK_EN()					RCC_BASE->APB1ENR |= (1 << 13)

/* Disable Clock for SPIx */
#define SPI1_PCLK_DIS()				RCC_BASE->APB1ENR &= (uint32_t)~(1 << RCC_APB2ENR_SPI1EN)
#define SPI2_PCLK_DIS()				RCC_BASE->APB1ENR &= (uint32_t)~(1 << RCC_APB1ENR_SPI2EN)
#define SPI3_PCLK_DIS()				RCC_BASE->APB1ENR &= (uint32_t)~(1 << RCC_APB1ENR_SPI3EN)
//#define SPI4_PCLK_DIS()				RCC_BASE->APB1ENR &= (uint32_t)~(1 << 13)

/* Reset Register for SPIx */

/*
 * Clock and Reset Control of I2C
 */
/* Enable Clock for I2Cx */
#define I2C1_PCLK_EN()				RCC_BASE->APB1ENR |= (1 << RCC_APB1ENR_I2C1EN)
#define I2C2_PCLK_EN()        RCC_BASE->APB1ENR |= (1 << RCC_APB1ENR_I2C2EN)
#define I2C3_PCLK_EN()        RCC_BASE->APB1ENR |= (1 << RCC_APB1ENR_I2C3EN)

/* Disable Clock for I2Cx */
#define I2C1_PCLK_DIS()				 RCC_BASE->APB1ENR &= (uint32_t)~(1 << RCC_APB1ENR_I2C1EN)
#define I2C2_PCLK_DIS()        RCC_BASE->APB1ENR &= (uint32_t)~(1 << RCC_APB1ENR_I2C2EN)
#define I2C3_PCLK_DIS()        RCC_BASE->APB1ENR &= (uint32_t)~(1 << RCC_APB1ENR_I2C3EN)

/* Reset Register for USART*/
#define I2C1_REG_RESET()       do{RCC_BASE->APB1RSTR |= (1<< RCC_APB1RSTR_I2C1); RCC_BASE->APB1RSTR &= (uint32_t)~(1 << RCC_APB1RSTR_I2C1);}while(0)
#define I2C2_REG_RESET()       do{RCC_BASE->APB1RSTR |= (1<< RCC_APB1RSTR_I2C2); RCC_BASE->APB1RSTR &= (uint32_t)~(1 << RCC_APB1RSTR_I2C2);}while(0)
#define I2C3_REG_RESET()       do{RCC_BASE->APB1RSTR |= (1<< RCC_APB1RSTR_I2C3); RCC_BASE->APB1RSTR &= (uint32_t)~(1 << RCC_APB1RSTR_I2C3);}while(0)
/*
 * Clock and Reset Control of USART
 */

/* Enable Clock for USARTx */
#define USART1_PCLK_EN()			RCC_BASE->APB2ENR |= (1<< RCC_APB2ENR_USART1EN)	
#define USART2_PCLK_EN()			RCC_BASE->APB1ENR |= (1<< RCC_APB1ENR_USART2EN)
#define USART3_PCLK_EN()			RCC_BASE->APB1ENR |= (1<< RCC_APB1ENR_USART3EN)
#define UART4_PCLK_EN()		    RCC_BASE->APB1ENR |= (1<< RCC_APB1ENR_UART4EN)
#define UART5_PCLK_EN()				RCC_BASE->APB1ENR |= (1<< RCC_APB1ENR_UART5EN)
#define USART6_PCLK_EN()			RCC_BASE->APB2ENR |= (1<< RCC_APB2ENR_USART6EN)

/* Disable Clock for USARTx */
#define USART1_PCLK_DIS()			RCC_BASE->APB2ENR &= (uint32_t)~(1<< RCC_APB2ENR_USART1EN)	
#define USART2_PCLK_DIS()			RCC_BASE->APB1ENR &= (uint32_t)~(1<< RCC_APB1ENR_USART2EN)
#define USART3_PCLK_DIS()			RCC_BASE->APB1ENR &= (uint32_t)~(1<< RCC_APB1ENR_USART3EN)
#define UART4_PCLK_DIS()		  RCC_BASE->APB1ENR &= (uint32_t)~(1<< RCC_APB1ENR_UART4EN)
#define UART5_PCLK_DIS()			RCC_BASE->APB1ENR &= (uint32_t)~(1<< RCC_APB1ENR_UART5EN)
#define USART6_PCLK_DIS()			RCC_BASE->APB2ENR &= (uint32_t)~(1<< RCC_APB2ENR_USART6EN)

/* Reset Register for USART*/


/********************************************************************

********************************************************************/

void RCC_Config(RCC_Config_t *pRCC_Config);
uint32_t RCC_GetPCLK2Value(void);
uint32_t RCC_GetPCLK1Value(void);

#endif /* __STM32F407XX_RCC_DRIVER_H_ */
