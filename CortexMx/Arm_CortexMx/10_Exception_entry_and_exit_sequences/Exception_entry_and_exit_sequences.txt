Exception Entry Sequence
1 Pending bit set
2 Stack(pushing all content of register into stack memory) and Vector fetch(find and fetching address of the exception of exception handler)
3 Entry in to the handler and Active bit set
4 Clears the pending status(processor does it automatically)
5 Now processor mode changed to handler mode
6 Now handler code is executing
7 The MSP will be used for any stack operations inside the handler
Exception Exit Sequence
In Cortex M3/M4 processors the exception return mechanism is triggered using a special return address called EXC_RETURN
EXC_RETURN is generated during exception entry and is stored in the LR
When EXC_RETURN is written to PC it triggers the exception return

EXC_RETURN 
when it is generated?
During an exception handler entry. The value of the return address(PC) is not stored in the LR as it is done during calling of a normal C function. Instead the exception mechanism stores the special value called EXC_RETURN in LR
EXC_RETURN Possible Values
EXC_RETURN      Description
0xFFFFFFF1	Return to Handler mode
		Exception return gets state from the main stack
		Executions uses MSP after return.	  	
0xFFFFFFF9	Return to Thread mode
		Exception return gets state from the main stack
		Executions uses MSP after return.
0xFFFFFFF1	Return to Thread mode
		Exception return gets state from the process stack
		Executions uses PSP after return.

