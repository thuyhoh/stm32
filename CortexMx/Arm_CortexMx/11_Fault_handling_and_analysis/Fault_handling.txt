what is fault?
The fault is an exception generated by the processor(system exception) to indicate an error

why fault happens
- faults happen because of programmers handling processor by violating the design rules or may be due to interfaces with which the processor deals
- whenever a fault happens, internal processor registers will be updated to record the type of fault, the address of instruction at which the fault happened, and if a associated exception is enabled, the exception handler will be called by the processor
- in the exception handler programmers may implement the code to report, resolve, or recover from the fault
- For example, if your code tries to divide a zero, then divide by 0 fault will be raised from the hardware, which will invoke usage fault exception handler (if enabled). In the exception handler, you may make certain decisions to get rid of the problem, like closing the task.etc
- Most of the time, fault happens by programmer's code not adhering to processor programming guidelines.

Causes of fault
- divide by zero
- undefined instruction
- attempt to execute code from memory region which is marked as execute never (XN) to prevent code injection
- MPU guarded memory region access violation by the code
- Unaligned data access(if enabled)
- Returning to thread mode keeping active interrupt alive
- bus error (example no response from memory device(e.g., SDRAM))
- Executing SVC instruction inside SVC handler or calling a function in SVC handler which eventually execute hidden SVC instruction
- Debug monitor setting and related exceptions

Hard-fault exception
A HardFault is an exception that occurs because of an error during exception processing, or because an exception cannot be managed by any other exception mechanism. It has 3rd highest fixed priority(-1) after reset and NMI meaning it has higher priority than any exception with configurable priority
cause:
- Escalation of configurable fault exceptions
- bus error returned during a vector fetch
- execution of break point instruction when both halt mode and debug monitor is disabled
- Executing SVC instruction inside SVC handler

Mem manage fault exception
- this is a configurable fault exception. Disabled by default
- You can enable this exception by configuring the processor register "System Handler Control and State Register (SHCSR)"
- When mem manage fault happens mem manage fault exception handler will be executed by the processor
- Priority of this fault exception is configurable
Causes:
- As its name indicates this fault exception triggers when memory access violation is detected(access permission by the processor or MPU)
- Unprivileged thread mode code (such as user application or RTOS task) tries to access a memory region which is marked as "privileged access only" by the MPU
- Writing to memory regions which are marked as read-only by the MPU4
- This fault can also be triggered when trying to execute program code from Peripheral memory regions. Peripheral memory regions are marked as XN(eXecute Never) regions by the processor design to avoid code injection attacks through peripherals 

Bus fault exception
- this is a configurable fault exception. Disabled by default
- You can enable this exception by configuring the processor register "System Handler Control and State Register (SHCSR)"
- When bus fault happens, the processor executes bus fault exception handler
- The priority of this fault exception is configurable
Causes:
- Due to error response returned by the processor bus interfaces during access to memory devices
 + During instruction fetch
 + During data read or write to memory devices
- If bus error happens during vector fetch, it will be escalated to a hard fault even if bus fault exception is enabled
- Memory device sends error response when the processor bus interface tries to access invalid or restricted memory locations which could generate a bus fault
- When the device is not ready to accept memory transfer
- You may encounter such issues when you play with external memories such as SDRAM connected via DRAM controllers
- Unprivileged access to the private peripheral bus

Usage fault exception
- this is a configurable fault exception. Disabled by default
- You can enable this exception by configuring the processor register "System Handler Control and State Register (SHCSR)"
- When usage fault happens, the processor executes usage fault exception handler
- Priority of this fault exception is configurable
Causes:
